#!/usr/bin/env node

require('babel-polyfill')

const { spawn } = require('child_process')
const path = require('path')
const { env } = require('decentraland-commons')

let CONNECTION_STRING = process.env.CONNECTION_STRING

if (!CONNECTION_STRING) {
  loadEnv()

  CONNECTION_STRING = env.get('CONNECTION_STRING', () => {
    throw new Error(
      'Please set a CONNECTION_STRING env variable before running migrations'
    )
  })
}

const child = spawn(
  resolvePath('./node-pg-migrate'),
  [
    '--database-url-var',
    'CONNECTION_STRING',
    '--migrations-dir',
    __dirname,
    '--ignore-pattern',
    '\\..*|.*migrate',
    ...process.argv.slice(2)
  ],
  {
    env: { ...process.env, CONNECTION_STRING }
  }
)
console.log('Running command:')
console.log(child.spawnargs.join(' '))

child.on('error', function(error) {
  console.log(error.message)
})

child.stdout.on('data', function(data) {
  process.stdout.write(data.toString())
})

child.stderr.on('data', function(data) {
  process.stdout.write(data.toString())
})


function loadEnv() {
  env.load({ path: resolvePath('../src/.env') })
}

function resolvePath(destination) {
  const dirname = path.dirname(require.main.filename)
  return path.resolve(dirname, destination)
}
